apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.database.name }}
  labels:
    app: {{ .Values.database.name }}
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
    spec:
      containers:
        - name: {{ .Values.database.name }}
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: POSTGRES_DB
              value: {{ .Values.database.name }}
            {{- range $key, $value := .Values.database.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.database.persistence.storageClass }}
        storageClassName: {{ .Values.database.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.database.persistence.size }}